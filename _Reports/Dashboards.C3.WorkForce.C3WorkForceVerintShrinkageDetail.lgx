<?xml version="1.0" encoding="utf-8"?>
<Report ID="Dashboards.C3.WorkForce.C3WorkForceVerintShrinkageDetail" SavedBy="JOMAX\vyancey" SavedAt="2/8/2013 6:16:58 PM" EngineVersion="11.0.43">
  <ReportHeader />
  <Body>
    <DataTable ID="dtDepartmentDetail">
      <DataLayer Type="SQL" Source="Use CallCenterReporting&#xD;&#xA;&#xD;&#xA;SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;DECLARE&#xD;&#xA;	@ReportDate DATE = NULL&#xD;&#xA;	,@Baseline1 DATE = NULL&#xD;&#xA;	,@Baseline2 DATE = NULL&#xD;&#xA;	,@Baseline3 DATE = NULL&#xD;&#xA;	,@Past DATE = NULL&#xD;&#xA;	,@rptTime TIME = NULL&#xD;&#xA;	,@BaselineDates INT = NULL&#xD;&#xA;&#xD;&#xA;SET @ReportDate = CAST(Getdate() as Date)&#xD;&#xA;SET @Baseline1 = DATEADD(DAY,-7,@ReportDate)&#xD;&#xA;SET @Baseline2 = DATEADD(DAY,-14,@ReportDate)&#xD;&#xA;SET @Baseline3 = DATEADD(DAY,-21,@ReportDate)&#xD;&#xA;SET @Past = DATEADD(WEEK,-52,@ReportDate)&#xD;&#xA;SET @rptTime = '12:00:00'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--Create Date Table&#xD;&#xA;DECLARE @DateRanges TABLE (&#xD;&#xA;							StartDate DateTime&#xD;&#xA;							, EndDate DateTime&#xD;&#xA;							, WeekType VARCHAR(10)&#xD;&#xA;						   )&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;INSERT INTO @DateRanges&#xD;&#xA;SELECT @ReportDate, DATEADD(DAY,1,@ReportDate), 'Current'&#xD;&#xA;UNION&#xD;&#xA;SELECT @Baseline1, DATEADD(DAY,1,@Baseline1), 'Baseline'&#xD;&#xA;UNION&#xD;&#xA;SELECT @Baseline2, DATEADD(DAY,1,@Baseline2), 'Baseline'&#xD;&#xA;UNION&#xD;&#xA;SELECT @Baseline3, DATEADD(DAY,1,@Baseline3), 'Baseline'&#xD;&#xA;UNION&#xD;&#xA;SELECT @Past, DATEADD(DAY,1,@Past), 'Past'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--Verint Schedules Table&#xD;&#xA;SELECT DR.WeekType&#xD;&#xA;		, C3.Department&#xD;&#xA;		, VDS.manager_userID&#xD;&#xA;		, VDS.ShiftStart&#xD;&#xA;		, VDS.ShiftEnd&#xD;&#xA;		, VDS.ShiftDuration&#xD;&#xA;		, ISNULL(vda.Activity,'Working') AS 'Activity'&#xD;&#xA;INTO #OUTPUT&#xD;&#xA;FROM dbo.rptVerintDailySchedule VDS&#xD;&#xA;  JOIN dbo.rptDailyRepHierarchy RH&#xD;&#xA;    ON RH.Manager_UserID = VDS.manager_userID&#xD;&#xA;	AND RH.rptDate = VDS.rptDate&#xD;&#xA;  JOIN dbo.rptC3Departments C3&#xD;&#xA;    ON C3.DeptID = RH.DepartmentID&#xD;&#xA;  JOIN @DateRanges DR&#xD;&#xA;    ON (VDS.rptDate &gt;= DATEADD(day,-1,dr.StartDate) and VDS.rptDate &lt;= DR.EndDate)&#xD;&#xA;	AND ((VDS.ShiftStart &gt;= DR.StartDate and VDS.ShiftStart &lt; DR.EndDate)&#xD;&#xA;		OR (VDS.ShiftEnd &gt;= DR.StartDate and VDS.ShiftEnd &lt;= DR.EndDate))&#xD;&#xA;  LEFT JOIN &#xD;&#xA;			(SELECT VDA.rptDate&#xD;&#xA;					,VDA.activity&#xD;&#xA;					,VDA.manager_userID&#xD;&#xA;			FROM dbo.rptVerintDailyActivities VDA&#xD;&#xA;				JOIN dbo.rptVerintActivitiesLookup VAL&#xD;&#xA;					ON VAL.ActivityID = VDA.ActivityID&#xD;&#xA;					AND isTimeOff = 1&#xD;&#xA;				  JOIN @DateRanges DR&#xD;&#xA;					ON (VDA.rptDate &gt;= DATEADD(day,-1,DR.StartDate) and VDA.rptDate &lt;= DR.EndDate)&#xD;&#xA;					AND ((VDA.ActivityStart &gt;= DR.StartDate and VDA.ActivityStart &lt; DR.EndDate)&#xD;&#xA;						OR (VDA.ActivityEnd &gt;= DR.StartDate and VDA.ActivityEnd &lt;= DR.EndDate))&#xD;&#xA;			GROUP BY VDA.rptDate&#xD;&#xA;					,VDA.activity&#xD;&#xA;					,VDA.manager_userID)vda&#xD;&#xA;  	ON VDS.Manager_UserID = VDA.Manager_UserID&#xD;&#xA;	AND VDS.rptDate = VDA.rptDate&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--Create 15 Minute Time Ranges&#xD;&#xA;DECLARE @rptTimeRanges TABLE (&#xD;&#xA;						 WeekType VARCHAR(10)&#xD;&#xA;						 ,rptTimeStart DATETIME&#xD;&#xA;						 ,rptTimeEnd DATETIME&#xD;&#xA;					    )&#xD;&#xA;&#xD;&#xA;DECLARE @Minutes INT = 0&#xD;&#xA;&#xD;&#xA;WHILE @Minutes &lt; 1440&#xD;&#xA;&#xD;&#xA;BEGIN&#xD;&#xA;&#xD;&#xA;INSERT INTO @rptTimeRanges&#xD;&#xA;SELECT WeekType&#xD;&#xA;		, DATEADD(minute,@minutes,dr.StartDate) AS 'rptTimeStart'&#xD;&#xA;		, DATEADD(minute,@minutes,dr.StartDate) AS 'rptTimeEnd'&#xD;&#xA;FROM @DateRanges dr&#xD;&#xA;&#xD;&#xA;SET @Minutes = @Minutes + 15&#xD;&#xA;&#xD;&#xA;END&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;SELECT @BaselineDates = COUNT(DISTINCT S.StartDate) FROM @DateRanges S WHERE S.WeekType = 'Baseline'&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;--Calculate and Format LogiXML Output&#xD;&#xA;Select Department&#xD;&#xA;		,rptDate&#xD;&#xA;		,rptTime&#xD;&#xA;		,CurrentRepsIn&#xD;&#xA;		,CurrentRepsOut&#xD;&#xA;		,CurrentRepsWorking&#xD;&#xA;		,CurrentRepsNotWorking&#xD;&#xA;		,NULLIF((CurrentRepsNotWorking*1.00),0)/(CurrentRepsWorking + CurrentRepsNotWorking) as 'CurrentShrinkage'&#xD;&#xA;		,PastRepsIn&#xD;&#xA;		,PastRepsOut&#xD;&#xA;		,PastRepsWorking&#xD;&#xA;		,PastRepsNotWorking&#xD;&#xA;		,NULLIF((PastRepsNotWorking*1.00),0)/(PastRepsWorking + PastRepsNotWorking) as 'PastShrinkage'&#xD;&#xA;		,BaselineRepsIn&#xD;&#xA;		,BaselineRepsOut&#xD;&#xA;		,BaselineRepsWorking&#xD;&#xA;		,BaselineRepsNotWorking&#xD;&#xA;		,NULLIF((BaselineRepsNotWorking*1.00),0)/(BaselineRepsWorking + BaselineRepsNotWorking) as 'BaselineShrinkage'&#xD;&#xA;FROM&#xD;&#xA;	(&#xD;&#xA;		SELECT  O.Department&#xD;&#xA;				,CAST(CONVERT(VARCHAR(8),o.rptTimeStart,108) AS DateTime) AS  'rptDate'&#xD;&#xA;				,CAST(o.rptTimeStart AS Time) AS 'rptTime'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Current' THEN o.RepsIn ELSE 0 END) AS 'CurrentRepsIn'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Current' THEN o.RepsOut ELSE 0 END) AS 'CurrentRepsOut'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Current' THEN o.RepsWorking ELSE 0 END) AS 'CurrentRepsWorking'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Current' THEN o.RepsNotWorking ELSE 0 END) AS 'CurrentRepsNotWorking'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Past' THEN o.RepsIn ELSE 0 END) AS 'PastRepsIn'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Past' THEN o.RepsOut ELSE 0 END) AS 'PastRepsOut'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Past' THEN o.RepsWorking ELSE 0 END) AS 'PastRepsWorking'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Past' THEN o.RepsNotWorking ELSE 0 END) AS 'PastRepsNotWorking'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Baseline' THEN o.RepsIn ELSE NULL END)/NULLIF(@BaselineDates,0) AS 'BaselineRepsIn'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Baseline' THEN o.RepsOut ELSE NULL END)/NULLIF(@BaselineDates,0) AS 'BaselineRepsOut'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Baseline' THEN o.RepsWorking ELSE NULL END)/NULLIF(@BaselineDates,0) AS 'BaselineRepsWorking'&#xD;&#xA;				,SUM(CASE WHEN o.WeekType = 'Baseline' THEN o.RepsNotWorking ELSE NULL END)/NULLIF(@BaselineDates,0) AS 'BaselineRepsNotWorking'&#xD;&#xA;		FROM (&#xD;&#xA;				SELECT O.Department&#xD;&#xA;						,rt.WeekType&#xD;&#xA;						,rt.rptTimeStart&#xD;&#xA;						,COUNT(DISTINCT CASE WHEN o.Activity = 'Working' and ShiftStart = rptTimeStart THEN o.manager_userID ELSE NULL END) AS 'RepsIn'&#xD;&#xA;						,COUNT(DISTINCT CASE WHEN o.Activity = 'Working' and ShiftEnd = rptTimeStart THEN o.manager_userID ELSE NULL END) AS 'RepsOut'&#xD;&#xA;						,COUNT(DISTINCT CASE WHEN o.Activity = 'Working' and ShiftStart &lt;= rptTimeStart and ShiftEnd &gt; rptTimeStart THEN o.manager_userID ELSE NULL END) AS 'RepsWorking'&#xD;&#xA;						,COUNT(DISTINCT CASE WHEN o.Activity &lt;&gt; 'Working' and ShiftStart &lt;= rptTimeStart and ShiftEnd &gt; rptTimeStart THEN o.manager_userID ELSE NULL END) AS 'RepsNotWorking'&#xD;&#xA;				FROM @rptTimeRanges rt&#xD;&#xA;				JOIN #OUTPUT o&#xD;&#xA;					ON o.ShiftStart &lt;= rt.rptTimeStart&#xD;&#xA;					AND o.ShiftEnd &gt;= rt.rptTimeStart&#xD;&#xA;				WHERE CAST(rt.rptTimeStart AS Time) = @rptTime&#xD;&#xA;				GROUP BY O.Department&#xD;&#xA;						,rt.WeekType&#xD;&#xA;						,rt.rptTimeStart&#xD;&#xA;			)o&#xD;&#xA;		GROUP BY O.Department&#xD;&#xA;				,CAST(CONVERT(VARCHAR(8),o.rptTimeStart,108) AS DateTime)&#xD;&#xA;				,CAST(o.rptTimeStart AS Time)&#xD;&#xA;	)A" ConnectionID="connP3BIG-CallCenterReporting" />
      <Remark>
        <DataLayer Type="SP" Command="BiLogiReporting.dbo.rptWorkForceDashboardDepartmentDetail_sp" ConnectionID="connM1BIG-biLogiReporting">
          <SPParameters>
            <SPParameter SPParamDirection="Input" ID="@ReportDate" SPParamSize="7" SPParamType="dt-7" Value="@Request.dateStart~" />
            <SPParameter SPParamDirection="Input" ID="@Baseline1" SPParamSize="7" SPParamType="dt-7" Value="@Request.dateBaseline1~" />
            <SPParameter SPParamDirection="Input" ID="@Baseline2" SPParamSize="7" SPParamType="dt-7" Value="@Request.dateBaseline2~" />
            <SPParameter SPParamDirection="Input" ID="@Baseline3" SPParamSize="7" SPParamType="dt-7" Value="@Request.dateBaseline3~" />
            <SPParameter SPParamDirection="Input" ID="@Past" SPParamSize="7" SPParamType="dt-7" Value="@Request.datePast~" />
            <SPParameter ID="@rptTime" SPParamDirection="Input" SPParamSize="8" SPParamType="dt-200" Value="@Request.rptTime~" />
          </SPParameters>
        </DataLayer>
      </Remark>
      <DataTableColumn ID="colDepartment" Header="Department">
        <Label Caption="@Data.Department~" ID="lblDepartment" />
      </DataTableColumn>
      <DataTableColumn ID="colCurrent" Header="Current" Class="ThemeAlignRight">
        <Label Caption="@Data.CurrentShrinkage~" ID="lblCurrent" Format="Percent" />
      </DataTableColumn>
      <DataTableColumn ID="colBaseline" Header="Baseline" Class="ThemeAlignRight">
        <Label Caption="@Data.BaselineShrinkage~" ID="lblBaseline" Format="Percent" />
      </DataTableColumn>
      <DataTableColumn ID="colPast" Header="Last Year" Class="ThemeAlignRight">
        <Label Caption="@Data.PastShrinkage~" ID="lblPast" Format="Percent" />
      </DataTableColumn>
    </DataTable>
  </Body>
  <ReportFooter />
  <ideTestParams dateStart="" dateBaseline1="" dateBaseline2="" dateBaseline3="" datePast="" rptTime="" />
</Report>